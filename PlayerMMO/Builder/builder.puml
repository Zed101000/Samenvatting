@startuml Builder_Pattern

title Builder Pattern - Player Creation

interface IPlayerBuilder {
    +SetName(name: string): IPlayerBuilder
    +SetHealth(health: int): IPlayerBuilder
    +SetMana(mana: int): IPlayerBuilder
    +SetAttackPower(attackPower: int): IPlayerBuilder
    +SetDefense(defense: int): IPlayerBuilder
    +SetLevel(level: int): IPlayerBuilder
    +Build(): IPlayer
    +Reset(): void
}

class PlayerBuilder {
    -_name: string
    -_health: int
    -_mana: int
    -_attackPower: int
    -_defense: int
    -_level: int
    +SetName(name: string): IPlayerBuilder
    +SetHealth(health: int): IPlayerBuilder
    +SetMana(mana: int): IPlayerBuilder
    +SetAttackPower(attackPower: int): IPlayerBuilder
    +SetDefense(defense: int): IPlayerBuilder
    +SetLevel(level: int): IPlayerBuilder
    +Build(): IPlayer
    +Reset(): void
}

class GamePlayerDirector {
    -_builder: IPlayerBuilder
    +GamePlayerDirector(builder: IPlayerBuilder)
    +CreateWarrior(): IPlayer
    +CreateMage(): IPlayer
    +CreateRogue(): IPlayer
}

interface IPlayer {
    +Name: string
    +Health: int
    +Mana: int
    +AttackPower: int
    +Defense: int
    +Level: int
    +Play(): void
    +Attack(): void
    +Defend(): void
    +Heal(): void
}

class BasePlayer {
    +BasePlayer(name: string, mana: int, defense: int, attackPower: int, health: int, level: int)
    +Play(): void
    +Attack(): void
    +Defend(): void
    +Heal(): void
}

PlayerBuilder ..|> IPlayerBuilder
GamePlayerDirector --> IPlayerBuilder : uses
IPlayerBuilder --> IPlayer : creates
BasePlayer ..|> IPlayer
PlayerBuilder --> BasePlayer : creates

note right of GamePlayerDirector
  Director creates different
  player configurations:
  - Warrior (high health/attack)
  - Mage (high mana/low defense)
  - Rogue (balanced stats)
end note

@enduml
